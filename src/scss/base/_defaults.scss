@import '../tokens/namespace';
@import '../tokens/transition'; // Probably move
@import '../tokens/typography';
@import '../functions/to-rem';
@import '../functions/to-theme-var';

// This rule styles the browser's selection color in Firefox.
::-moz-selection {
  background-color: to-theme-var(accent);
  color: to-theme-var(foreground-secondary);
}

// This rule styles the browser's selection color.
::selection {
  background-color: to-theme-var(accent);
  color: to-theme-var(foreground-secondary);
}

* {
  box-sizing: border-box;

  // These properties hide scrollbars for IE, Edge and Firefox.
  -ms-overflow-style: none;
  scrollbar-width: none;
}

// This rule hides scrollbars in Chrome, Safari and Opera.
::-webkit-scrollbar {
  display: none;
}

html,
body {
  overflow: hidden;
  height: 100%;
  background: linear-gradient(
    to bottom left,
    to-theme-var(background-primary),
    to-theme-var(background-secondary)
  );
  color: to-theme-var(foreground-primary);
  font-family: $font-family-system;

  // These rules improve font antialiasing on Mac OS.
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  // This rule improves text rendering.
  text-rendering: optimizeLegibility;

  // This rule removes the overlay that appears on elements when tapped in
  // Mobile Safari.
  -webkit-tap-highlight-color: transparent;
}

body::after {
  content: '';
  filter: blur(to-rem(200px));
  position: fixed;
  top: 50%;
  right: 0;
  transform: translate(50%, -50%);
  height: 100vh;
  width: 100vh;
  border-radius: 100%;
  background: to-theme-var(lighting);
  pointer-events: none;
}

// The <body> double element exists so that CSS gradients are transitionable
// through the use of the opacity property. They are not transitionable through
// the use of the background property.
.#{$ns}-body-double {
  opacity: 0;
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: linear-gradient(
    to bottom left,
    to-theme-var(background-primary-double),
    to-theme-var(background-secondary-double)
  );
  pointer-events: none;
}

.#{$ns}-body-double.active {
  animation-duration: 500ms;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-name: bodyDoubleFadeOut;
  animation-timing-function: ease;
}

@keyframes bodyDoubleFadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.#{$ns}-app {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

// MOVE

h1 {
  opacity: 0;
  position: relative;
  transform: translateY(#{to-rem(20px)});
  transition: opacity $transition-duration-opacity ease,
    transform $transition-duration-transform
      $transition-timing-function-bounce-m;
  transition-delay: $transition-duration-unit * 10 + ms;
}

.ready h1 {
  opacity: 1;
  transform: translateY(0);
  transition-delay: $transition-duration-unit * 0 + ms;
}

p {
  opacity: 0;
  position: relative;
  transform: translateY(#{to-rem(20px)});
  transition: opacity $transition-duration-opacity ease,
    transform $transition-duration-transform
      $transition-timing-function-bounce-m;
}

p:nth-of-type(1) {
  transition-delay: $transition-duration-unit * 9 + ms;
}
p:nth-of-type(2) {
  transition-delay: $transition-duration-unit * 8 + ms;
}
p:nth-of-type(3) {
  transition-delay: $transition-duration-unit * 7 + ms;
}
p:nth-of-type(4) {
  transition-delay: $transition-duration-unit * 6 + ms;
}
p:nth-of-type(5) {
  transition-delay: $transition-duration-unit * 5 + ms;
}

.ready p {
  opacity: 1;
  transform: translateY(0);
}

.ready p:nth-of-type(1) {
  transition-delay: $transition-duration-unit * 1 + ms;
}
.ready p:nth-of-type(2) {
  transition-delay: $transition-duration-unit * 2 + ms;
}
.ready p:nth-of-type(3) {
  transition-delay: $transition-duration-unit * 3 + ms;
}
.ready p:nth-of-type(4) {
  transition-delay: $transition-duration-unit * 4 + ms;
}
.ready p:nth-of-type(5) {
  transition-delay: $transition-duration-unit * 5 + ms;
}
